{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Bot Connector API - V1.0",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "Bot Connector Support",
      "email": "botconnector@microsoft.com"
    },
    "license": {
      "name": "Microsoft License",
      "url": "http://botconnector.ai"
    }
  },
  "host": "intercomppe.azure-api.net",
  "schemes": [ "https" ],
  "paths": {
    "/bot/v1.0/messages/{id}": {
      "get": {
        "tags": [ "Messages" ],
        "summary": "get message by id",
        "description": "This method allows you to retrieve a message by using the message id",
        "operationId": "Messages_GetMessage",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "message.id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A message object will be returned\r\n",
            "schema": { "$ref": "#/definitions/Message" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    },
    "/bot/v1.0/messages": {
      "post": {
        "tags": [ "Messages" ],
        "summary": "Send a message",
        "description": "This method allows you to initiate a new conversation message with the user. \r\n\r\nThe important fields are\r\n\r\n| Property | Description|Example|\r\n| ---------|----------| ---------|\r\n| From     | The ChannelAccount of the Bot you want to send the message from |  SMS:+4255551212 (the bots address) |\r\n| To       | The channelAccount of the user you to start a conversation with | SMS:+4255551111 (the users address) |\r\n| Text     | The message you want to communicate | Text: \"Hello world\" |\r\n| Language | The language your message is expressed in (important if you have translation enabled) using the [language codes from Microsoft Translator](https://msdn.microsoft.com/en-us/library/hh456380.aspx) | Language: \"en\" |\r\n| Attachments | Attachments represent images and attachments that will be rendered on the platform as appropriate | |\r\n\r\nBots can track state data by User, Conversation and users in the converation by embedding data objects into the message.  \r\nThis data will be stored in persistant storage and reflected back to the bot with future messages\r\n\r\n| Property | Description |\r\n| ----- | ------ |\r\n| BotUserData |  Bot controlled Object which is tracked on the user regardless of the channel they communicate on|\r\n| BotConversationData | Bot controlled object which is tracked on the conversation regardless of the user you are talking to |\r\n| BotPerUserConversationData | Bot controlled object which is tracked on a user in a given conversation |",
        "operationId": "Messages_SendMessage",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "description": "message to send",
            "required": true,
            "schema": { "$ref": "#/definitions/Message" }
          }
        ],
        "responses": {
          "200": {
            "description": "A message object will be returned\r\n",
            "schema": { "$ref": "#/definitions/Message" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    },
    "/bot/v1.0/messages/{id}/reply": {
      "post": {
        "tags": [ "Messages" ],
        "summary": "Reply to a message",
        "description": "This method allows you to reply to a conversation at a later time.\r\n\r\nNormally bots receive a message and reply directly (inline) to the conversation, but sometimes a bot\r\nneeds to reply to a conversation at a later point. \r\n\r\nThe important fields are\r\n\r\n| Property | Description|Example|\r\n| ---------|----------| ---------|\r\n| id       | the message id you want to reply to.  The message referred to will be used to determine all of the routing information such as From/To/ChannelConversationID etc.|\r\n| Text     | The message you want to communicate | Text: \"Hello world\" |\r\n| Language | The language your message is expressed in (important if you have translation enabled) using the language codes from Microsoft Translator https://msdn.microsoft.com/en-us/library/hh456380.aspx | Language: \"en\" |\r\n| Attachments | Attachments represent images and attachments that will be rendered on the platform as appropriate | |\r\n\r\nBots can track state data by User, Conversation and users in the converation by embedding data objects into the message.  \r\nThis data will be stored in persistant storage and reflected back to the bot with future messages\r\n\r\n| Property | Description |\r\n| ----- | ------ |\r\n| BotUserData |  Bot controlled Object which is tracked on the user regardless of the channel they communicate on|\r\n| BotConversationData | Bot controlled object which is tracked on the conversation regardless of the user you are talking to |\r\n| BotPerUserConversationData | Bot controlled object which is tracked on a user in a given conversation |",
        "operationId": "Messages_ReplyToMessage",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the message.id to reply to",
            "required": true,
            "type": "string"
          },
          {
            "name": "replyMessage",
            "in": "body",
            "description": "message to reply with (only Text, Language are needed)",
            "required": true,
            "schema": { "$ref": "#/definitions/ReplyMessage" }
          }
        ],
        "responses": {
          "200": {
            "description": "A message object will be returned\r\n",
            "schema": { "$ref": "#/definitions/Message" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Message": {
      "description": "A Microsoft.Bot.Connector message",
      "type": "object",
      "properties": {
        "type": {
          "description": "What kind of message is this",
          "enum": [ "Message", "Ping", "DeleteUserData" ],
          "type": "string"
        },
        "id": {
          "description": "Bot.Connector Id for the message (always assigned by transport)",
          "type": "string"
        },
        "conversationId": {
          "description": "Bot.Connector ConverationId id for the conversation (always assigned by transport)",
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "Timestamp of when the message was created",
          "type": "string"
        },
        "sourceText": {
          "description": "(if translated) The OriginalText of the message",
          "type": "string"
        },
        "sourceLanguage": {
          "description": "(if translated) The language that the originator",
          "type": "string"
        },
        "language": {
          "description": "The language that the Text is expressed in",
          "type": "string"
        },
        "text": {
          "description": "The text of the message (this will be target language depending on flags and destination",
          "type": "string"
        },
        "attachments": {
          "description": "Array of attachments that can be anything",
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "from": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "ChannelIdentity that sent the message"
        },
        "to": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "ChennelIdentity the message is sent to"
        },
        "replyTo": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "Account to send replies to (for example, a group account that the message was part of)"
        },
        "replyToMessageId": {
          "description": "The message Id that this message is a reply to",
          "type": "string"
        },
        "participants": {
          "description": "List of ChannelAccounts in the conversation (NOTE: this is not for delivery means but for information)",
          "type": "array",
          "items": { "$ref": "#/definitions/ChannelAccount" }
        },
        "totalParticipants": {
          "format": "int32",
          "description": "Total participants in the conversation.  2 means 1:1 message",
          "type": "integer"
        },
        "mentions": {
          "description": "Array of mentions from the channel context",
          "type": "array",
          "items": { "$ref": "#/definitions/Mention" }
        },
        "place": {
          "description": "Place in user readable format:\r\nExamples: \r\nStarbucks, 140th Ave NE, Bellevue, WA",
          "type": "string"
        },
        "channelMessageId": {
          "description": "Channel Message Id",
          "type": "string"
        },
        "channelConversationId": {
          "description": "Channel Conversation Id",
          "type": "string"
        },
        "channelData": {
          "$ref": "#/definitions/Object",
          "description": "Channel specific properties.  For example: Email channel may pass the Subject field as a property"
        },
        "botUserData": {
          "$ref": "#/definitions/Object",
          "description": "Private Bot opaque data associated with a user (across all channels and conversations)"
        },
        "botConversationData": {
          "$ref": "#/definitions/Object",
          "description": "Private Bot opaque state data associated with a conversation"
        },
        "botPerUserInConversationData": {
          "$ref": "#/definitions/Object",
          "description": "Private Bot opaque state data associated with a user in a conversation"
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "Location information (see https://dev.onedrive.com/facets/location_facet.htm)"
        },
        "hashtags": {
          "description": "Hashtags for the message",
          "type": "array",
          "items": { "type": "string" }
        },
        "eTag": { "type": "string" }
      }
    },
    "Attachment": {
      "description": "A attachment",
      "required": [ "contentType" ],
      "type": "object",
      "properties": {
        "contentType": {
          "description": "(REQUIRED) mimetype/Contenttype for the file, either ContentUrl or Content must be set depending on the mimetype",
          "type": "string"
        },
        "contentUrl": {
          "description": "Url to content",
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/Object",
          "description": "Content Payload (for example, lat/long for contentype=\"location"
        },
        "fallbackText": {
          "description": "(OPTIONAL-CARD) FallbackText - used for downlevel clients, should be simple markup with links",
          "type": "string"
        },
        "title": {
          "description": "(OPTIONAL-CARD) Title",
          "type": "string"
        },
        "titleLink": {
          "description": "(OPTIONAL-CARD) link to use for the title",
          "type": "string"
        },
        "text": {
          "description": "(OPTIONAL-CARD) The Text description the attachment",
          "type": "string"
        },
        "thumbnailUrl": {
          "description": "(OPTIONAL-CARD) Thumbnail associated with attachment",
          "type": "string"
        }
      }
    },
    "ChannelAccount": {
      "description": "Channel account information needed to route a message",
      "required": [ "channelId", "address" ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Display friendly name of the user or bot",
          "type": "string"
        },
        "channelId": {
          "description": "Channel Id that the channelAccount is to be communicated with (Example: slack, sms, email, groupme, skype, twitter, etc.)",
          "type": "string"
        },
        "address": {
          "description": "Channel Address for the channelAccount (Example: @example)",
          "type": "string"
        },
        "id": {
          "description": "Id - id of the shared bot or user this channelaccount refers to (many channelaccounts can share one user id or bot id)",
          "type": "string"
        },
        "isBot": {
          "description": "Is this id a bot?",
          "type": "boolean"
        }
      }
    },
    "Mention": {
      "description": "Mention information",
      "type": "object",
      "properties": {
        "mentioned": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "The mentioned user"
        },
        "text": {
          "description": "Sub Text which represents the mention (can be null or empty)",
          "type": "string"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": { }
    },
    "Location": {
      "type": "object",
      "properties": {
        "altitude": {
          "format": "double",
          "description": "Altitude",
          "type": "number"
        },
        "latitude": {
          "format": "double",
          "description": "Latitude for the user when the message was created",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude for the user when the message was created",
          "type": "number"
        }
      }
    },
    "ErrorMessage": {
      "description": "A standardized message error payload",
      "type": "object",
      "properties": { "error": { "$ref": "#/definitions/Error" } }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "enum": [ "MissingProperty", "MalformedData", "NotFound", "ServiceUnavilable", "Internal", "InvalidRange", "NotSupported", "NotAllowed" ],
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "description": "Status code",
          "type": "integer"
        },
        "innerError": {
          "$ref": "#/definitions/Error",
          "description": "Internal information on the reason for the error"
        }
      }
    },
    "ReplyMessage": {
      "description": "A reply message for Bot.Connector",
      "type": "object",
      "properties": {
        "type": {
          "description": "MessageType for the reply",
          "enum": [ "Message", "Ping", "DeleteUserData" ],
          "type": "string"
        },
        "language": {
          "description": "The language that the Text is expressed in",
          "type": "string"
        },
        "text": {
          "description": "The text of the message (this will be target language depending on flags and destination",
          "type": "string"
        },
        "attachments": {
          "description": "Array of attachments that can be anything",
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "channelData": {
          "$ref": "#/definitions/Object",
          "description": "Channel specific properties.  For example: Email may pass the Subject field as a property"
        },
        "botUserData": {
          "$ref": "#/definitions/Object",
          "description": "Private Bot opaque data associated with a user (across all channels and conversations)"
        },
        "botConversationData": {
          "$ref": "#/definitions/Object",
          "description": "Private Bot opaque state data associated with a conversation"
        },
        "botPerUserInConversationData": {
          "$ref": "#/definitions/Object",
          "description": "Private Bot opaque state data associated with a user in a conversation"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Basic HTTP Authentication using ApiKey/ApiSecret"
    },
    "apiKey": {
      "type": "apiKey",
      "description": "API Subscription Key Authentication",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  }
}
