{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Microsoft Bot Connector API - V1.0",
    "description": "© 2016 Microsoft",
    "termsOfService": "https://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx",
    "contact": {
      "name": "Bot Framework",
      "url": "https://botframework.com",
      "email": "botframework@microsoft.com"
    },
    "license": {
      "name": "The MIT License (MIT)",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "api.botframework.com",
  "schemes": [ "https" ],
  "paths": {
    "/bot/v1.0/bots/{botId}/users/{userId}": {
      "get": {
        "tags": [ "Bots" ],
        "summary": "GetUserData",
        "description": "Get a BotData record for the user",
        "operationId": "Bots_GetUserData",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "botId",
            "in": "path",
            "description": "The BotId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object\r\n",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Bots" ],
        "summary": "SetUserData",
        "description": "Update the bot user data",
        "operationId": "Bots_SetUserData",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "botId",
            "in": "path",
            "description": "The BotId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "botData",
            "in": "body",
            "description": "the new botdata",
            "required": true,
            "schema": { "$ref": "#/definitions/BotData" }
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object\r\n",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by someone else",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    },
    "/bot/v1.0/bots/{botId}/conversations/{conversationId}": {
      "get": {
        "tags": [ "Bots" ],
        "summary": "GetConversationData",
        "description": "get the bot data for a conversation",
        "operationId": "Bots_GetConversationData",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "botId",
            "in": "path",
            "description": "The BotId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "The conversationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object\r\n",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Bots" ],
        "summary": "SetConversationData",
        "description": "Update the bot conversation data",
        "operationId": "Bots_SetConversationData",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "botId",
            "in": "path",
            "description": "The BotId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "conversation id",
            "required": true,
            "type": "string"
          },
          {
            "name": "botData",
            "in": "body",
            "description": "the new botdata",
            "required": true,
            "schema": { "$ref": "#/definitions/BotData" }
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object\r\n",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by someone else",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    },
    "/bot/v1.0/bots/{botId}/conversations/{conversationId}/users/{userId}": {
      "get": {
        "tags": [ "Bots" ],
        "summary": "GetPerUserConversationData",
        "description": "get the bot data for a user in a conversation",
        "operationId": "Bots_GetPerUserConversationData",
        "consumes": [ ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "botId",
            "in": "path",
            "description": "The BotId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "The conversationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The user Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object\r\n",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Bots" ],
        "summary": "SetPerUserInConversationData",
        "description": "Update the bot user in a conversation data",
        "operationId": "Bots_SetPerUserInConversationData",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "botId",
            "in": "path",
            "description": "The BotId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversationId",
            "in": "path",
            "description": "conversation id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "string"
          },
          {
            "name": "botData",
            "in": "body",
            "description": "the new botdata",
            "required": true,
            "schema": { "$ref": "#/definitions/BotData" }
          }
        ],
        "responses": {
          "200": {
            "description": "A bot data object will be returned containing your object\r\n",
            "schema": { "$ref": "#/definitions/BotData" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "412": {
            "description": "The object you are trying to change has been changed by someone else",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    },
    "/bot/v1.0/messages": {
      "post": {
        "tags": [ "Messages" ],
        "summary": "Send a message",
        "description": "This method allows you to initiate a new conversation message with the user. \r\n\r\nThe important fields are:\r\n\r\n|Property    | Description                                                                                                                                                                                        |Example                              \r\n|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| ------------------------------------\r\n|From        | The ChannelAccount of the Bot you want to send the message from                                                                                                                                    |  SMS:+4255551212 (the bots address) \r\n|To          | The channelAccount of the user you to start a conversation with                                                                                                                                    | SMS:+4255551111 (the users address) \r\n|Text        | The message you want to communicate                                                                                                                                                                | Text: \"Hello world\"                 \r\n|Language    | The language your message is expressed in (important if you have translation enabled) using the [language codes from Microsoft Translator](https://msdn.microsoft.com/en-us/library/hh456380.aspx) | Language: \"en\"                      \r\n|Attachments | Attachments represent images and attachments that will be rendered on the platform as appropriate                                                                                                  | ...                                 \r\n|ChannelData | You can pass channel specific data to get custom native rendering of your message on a per channel basis. See channel documentation for information on what channels are expecting for this        | ...                                 \r\n\r\nBots can track state data by User, Conversation and Users within the Conversation by embedding data objects into the message.  \r\nThis data will be stored in persistent storage and reflected back to the bot with all future messages as appropriate to their scope.  \r\n\r\nThe properties you use to for Bot State are:\r\n\r\n|Property                   | Description                                                                                          | Example                                                         \r\n|-------------------------- | ---------------------------------------------------------------------------------------------------- | --------------------------------------------------------------\r\n|BotUserData                |  Bot controlled Object which is tracked on the user regardless of the channel they communicate on    | BotUserData: { 'Welcomed' : true }                              \r\n|BotConversationData        | Bot controlled object which is tracked on the conversation regardless of the user you are talking to | BotConversationData:  'MessageCount':13 }                       \r\n|BotPerUserConversationData | Bot controlled object which is tracked on a user in a given conversation                             | BotPerUserConversationData : {'LastRequest' : 'FavoriteColor' }",
        "operationId": "Messages_SendMessage",
        "consumes": [ "application/json", "text/json", "application/xml", "text/xml", "application/x-www-form-urlencoded" ],
        "produces": [ "application/json", "text/json", "application/xml", "text/xml" ],
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "description": "message to send",
            "required": true,
            "schema": { "$ref": "#/definitions/Message" }
          }
        ],
        "responses": {
          "200": {
            "description": "A message object will be returned\r\n",
            "schema": { "$ref": "#/definitions/Message" }
          },
          "400": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\n|       code           | Description |\r\n|----------------- | ----------------------------| \r\n| MissingPropery   | a property was missing |\r\n| MalformedData    | an argument was formatted incorrectly |\r\n| InvalidRange     |  a value was out of range |\r\n| Not Supported    |  a request was not supported |\r\n| Not Allowed      |  a request was not allowed because of credentials |\r\n\r\n\r\n \r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "401": { "description": "No content is returned with this status code.\r\n\r\nReasons for receiving this error code:\r\n* the Ocp-Apim-Subscription-Key header is missing or invalid \r\n* the BasicAuth with AppId and AppSecret are invalid\r\n" },
          "403": { "description": "If no error \r\nYou are forbidden from performing this action because \r\n* your credentials don't allow you to\r\n* your account has exceeded a quota \r\n\r\n" },
          "404": {
            "description": "The response is a ErrorMessage response.  Look at the Code field for a breakdown and message field for description of the error.\r\n\r\nresource was not found",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "500": {
            "description": "The response is a ErrorMessage response.  \r\n\r\nThe innererror object may have internal statuscode, code and message data to help you diagnose the issue.\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          },
          "503": {
            "description": "The service you are trying to communciate with was unavailable\r\n\r\n",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "BotData": {
      "description": "Public facing bot data",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Object",
          "description": "State data"
        },
        "eTag": { "type": "string" }
      }
    },
    "Object": {
      "type": "object",
      "properties": { }
    },
    "ErrorMessage": {
      "description": "A standardized message error payload",
      "type": "object",
      "properties": { "error": { "$ref": "#/definitions/Error" } }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "enum": [ "MissingProperty", "MalformedData", "NotFound", "ServiceError", "Internal", "InvalidRange", "NotSupported", "NotAllowed", "BadCertificate" ],
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "description": "Status code",
          "type": "integer"
        }
      }
    },
    "Message": {
      "description": "A Microsoft.Bot.Connector message",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the message",
          "enum": [ "Message", "Ping", "DeleteUserData", "BotAddedToConversation", "BotRemovedFromConversation", "UserAddedToConversation", "UserRemovedFromConversation", "EndOfConversation" ],
          "type": "string"
        },
        "id": {
          "description": "Id for the message (always assigned by transport)",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "conversationId": {
          "description": "Bot.Connector ConverationId id (always assigned by transport)",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "description": "Timestamp of when the message was created",
          "type": "string"
        },
        "sourceText": {
          "description": "(if translated) The OriginalText of the message",
          "type": "string"
        },
        "sourceLanguage": {
          "description": "(if translated) The language of the original message.",
          "type": "string"
        },
        "language": {
          "description": "The language code of the Text field",
          "type": "string"
        },
        "text": {
          "description": "The text of the message",
          "maxLength": 8192,
          "minLength": 0,
          "type": "string"
        },
        "attachments": {
          "description": "Array of content attachments to things like images",
          "type": "array",
          "items": { "$ref": "#/definitions/Attachment" }
        },
        "from": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "ChannelAccount of the user or bot that is sending the message"
        },
        "to": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "ChannelAccount of hte user or bot the message is being routed to"
        },
        "replyToMessageId": {
          "description": "The message Id that this message is a reply to",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "participants": {
          "description": "List of ChannelAccounts in the conversation",
          "type": "array",
          "items": { "$ref": "#/definitions/ChannelAccount" }
        },
        "totalParticipants": {
          "format": "int32",
          "description": "Total participants in the conversation.  2 means 1:1 message  User - Bot",
          "type": "integer"
        },
        "mentions": {
          "description": "Array of mentions from the channel context",
          "type": "array",
          "items": { "$ref": "#/definitions/Mention" }
        },
        "place": {
          "description": "Place in user readable format:",
          "type": "string"
        },
        "channelMessageId": {
          "description": "Channel Message Id",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "channelConversationId": {
          "description": "Channel Conversation Id",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "channelData": {
          "$ref": "#/definitions/Object",
          "description": "Channel specific payload"
        },
        "botUserData": {
          "$ref": "#/definitions/Object",
          "description": "Bot's User data object"
        },
        "botConversationData": {
          "$ref": "#/definitions/Object",
          "description": "Bot's Conversation Data object"
        },
        "botPerUserInConversationData": {
          "$ref": "#/definitions/Object",
          "description": "Bot's Per User in a conversation data object"
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "Location information (see https://dev.onedrive.com/facets/location_facet.htm)"
        },
        "hashtags": {
          "description": "Hashtags for the message",
          "type": "array",
          "items": { "type": "string" }
        },
        "eTag": { "type": "string" }
      }
    },
    "Attachment": {
      "description": "A attachment",
      "type": "object",
      "properties": {
        "contentType": {
          "description": "mimetype/Contenttype for the file, either ContentUrl or Content must be set depending on the mimetype",
          "type": "string"
        },
        "contentUrl": {
          "description": "Url to content",
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/Object",
          "description": "Content Payload (for example, lat/long for contentype=\"location"
        },
        "fallbackText": {
          "description": "(OPTIONAL-CARD) FallbackText - used for downlevel clients, should be simple markup with links",
          "type": "string"
        },
        "title": {
          "description": "(OPTIONAL-CARD) Title",
          "type": "string"
        },
        "titleLink": {
          "description": "(OPTIONAL-CARD) link to use for the title",
          "type": "string"
        },
        "text": {
          "description": "(OPTIONAL-CARD) The Text description the attachment",
          "type": "string"
        },
        "thumbnailUrl": {
          "description": "(OPTIONAL-CARD) Thumbnail associated with attachment",
          "type": "string"
        },
        "actions": {
          "description": "(OPTIONAL-Card) Actions associated with attachment",
          "type": "array",
          "items": { "$ref": "#/definitions/Action" }
        }
      }
    },
    "ChannelAccount": {
      "description": "Channel account information needed to route a message",
      "required": [ "channelId" ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Display friendly name of the user or bot",
          "type": "string"
        },
        "channelId": {
          "description": "Channel Id that the channelAccount is to be communicated with (Example: slack, sms, email, groupme, skype, twitter, etc.)",
          "type": "string"
        },
        "address": {
          "description": "Channel Address for the channelAccount (Example: joe@smith.com, or @joesmith or 123456)",
          "type": "string"
        },
        "id": {
          "description": "Id - id of the shared bot or user this channelaccount refers to",
          "type": "string"
        },
        "isBot": {
          "description": "Is this id a bot?",
          "type": "boolean"
        }
      }
    },
    "Mention": {
      "description": "Mention information",
      "type": "object",
      "properties": {
        "mentioned": {
          "$ref": "#/definitions/ChannelAccount",
          "description": "The mentioned user"
        },
        "text": {
          "description": "Sub Text which represents the mention (can be null or empty)",
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "altitude": {
          "format": "double",
          "description": "Altitude",
          "type": "number"
        },
        "latitude": {
          "format": "double",
          "description": "Latitude for the user when the message was created",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude for the user when the message was created",
          "type": "number"
        },
        "name": {
          "description": "Name for user location when the message was created",
          "type": "string"
        }
      }
    },
    "Action": {
      "description": "Action (button)",
      "type": "object",
      "properties": {
        "title": {
          "description": "Title of button",
          "type": "string"
        },
        "image": {
          "description": "(Optional) Picture which will appear on the button, next to text label.",
          "type": "string"
        },
        "message": {
          "description": "User defined string which will be posted to chat conversation publicly or privately.",
          "type": "string"
        },
        "url": {
          "description": "URL which will be opened in the browser built-into Client application",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Basic HTTP Authentication using AppId/AppSecret"
    },
    "apiKey": {
      "type": "apiKey",
      "description": "API Subscription Key Authentication",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  }
}