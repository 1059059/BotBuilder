<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandBackup" xml:space="preserve">
    <value>Indietro</value>
  </data>
  <data name="CommandBackupHelp" xml:space="preserve">
    <value>Indietro: Torna alla domanda precedente.</value>
  </data>
  <data name="CommandBackupTerms" xml:space="preserve">
    <value>indietro;torna indietro;torna</value>
  </data>
  <data name="CommandHelp" xml:space="preserve">
    <value>Aiuto</value>
  </data>
  <data name="CommandHelpHelp" xml:space="preserve">
    <value>Aiuto: Mostra i tipi di risposta che puoi inserire.</value>
  </data>
  <data name="CommandHelpTerms" xml:space="preserve">
    <value>aiuto;opzioni;\?</value>
  </data>
  <data name="CommandQuit" xml:space="preserve">
    <value>Chiudi</value>
  </data>
  <data name="CommandQuitHelp" xml:space="preserve">
    <value>Chiudi: Chiudi la form senza completarla.</value>
  </data>
  <data name="CommandQuitTerms" xml:space="preserve">
    <value>quit;stop;finish;goodby?;good bye?;bye;ciao;adios;bye-bye;so long;cheers</value>
  </data>
  <data name="CommandReset" xml:space="preserve">
    <value>Rinizia da capo</value>
  </data>
  <data name="CommandResetHelp" xml:space="preserve">
    <value>Reset: Rinizia a completare la form. (Con i valori predefiniti delle volte precedenti.)</value>
  </data>
  <data name="CommandResetTerms" xml:space="preserve">
    <value>rinizia da capo;reset;clear</value>
  </data>
  <data name="CommandStatus" xml:space="preserve">
    <value>Stato</value>
  </data>
  <data name="CommandStatusHelp" xml:space="preserve">
    <value>Stato: Mostra lo stato del completamento della form fino ad ora.</value>
  </data>
  <data name="CommandStatusTerms" xml:space="preserve">
    <value>stato;avanzamento;fino ad ora;risultati</value>
  </data>
  <data name="ConfirmChoiceFormat" xml:space="preserve">
    <value>{1}</value>
    <comment>0-number, 1-description</comment>
  </data>
  <data name="DefaultChoiceFormat" xml:space="preserve">
    <value>{0}. {1}</value>
    <comment>0-number, 1-description</comment>
  </data>
  <data name="DefaultChoiceLastSeparator" xml:space="preserve">
    <value>, o </value>
  </data>
  <data name="DefaultChoiceSeparator" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="DefaultLastSeparator" xml:space="preserve">
    <value>, e </value>
  </data>
  <data name="DefaultSeparator" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="LanguageArticles" xml:space="preserve">
    <value>un;uno;una;un';il;la;gli;le;lo</value>
  </data>
  <data name="LanguageStopWords" xml:space="preserve">
    <value>a;about;above;above;across;after;afterwards;again;against;all;almost;alone;along;already;also;although;always;am;among;amongst;amoungst;amount;an;and;another;any;anyhow;anyone;anything;anyway;anywhere;are;around;as;at;back;be;became;because;become;becomes;becoming;been;before;beforehand;behind;being;below;beside;besides;between;beyond;bill;both;bottom;but;by;call;can;cannot;cant;co;con;could;couldnt;cry;de;describe;detail;do;done;down;due;during;each;eg;eight;either;eleven;else;elsewhere;empty;enough;etc;even;ever;every;everyone;everything;everywhere;except;few;fifteen;fify;fill;find;fire;first;five;for;former;formerly;forty;found;four;from;front;full;further;get;give;go;had;has;hasnt;have;he;hence;her;here;hereafter;hereby;herein;hereupon;hers;herself;him;himself;his;how;however;hundred;ie;if;in;inc;indeed;interest;into;is;it;its;itself;keep;last;latter;latterly;least;less;ltd;made;many;may;me;meanwhile;might;mill;mine;more;moreover;most;mostly;move;much;must;my;myself;name;namely;neither;never;nevertheless;next;nine;no;nobody;none;noone;nor;not;nothing;now;nowhere;of;off;often;on;once;one;only;onto;or;other;others;otherwise;our;ours;ourselves;out;over;own;part;per;perhaps;please;put;rather;re;same;see;seem;seemed;seeming;seems;serious;several;she;should;show;side;since;sincere;six;sixty;so;some;somehow;someone;something;sometime;sometimes;somewhere;still;such;system;take;ten;than;that;the;their;them;themselves;then;thence;there;thereafter;thereby;therefore;therein;thereupon;these;they;thick;thin;third;this;those;though;three;through;throughout;thru;thus;to;together;too;top;toward;towards;twelve;twenty;two;un;under;until;up;upon;us;very;via;was;we;well;were;what;whatever;when;whence;whenever;where;whereafter;whereas;whereby;wherein;whereupon;wherever;whether;which;while;whither;who;whoever;whole;whom;whose;why;will;with;within;without;would;yet;you;your;yours;yourself;yourselves</value>
  </data>
  <data name="MatchCurrentChoice" xml:space="preserve">
    <value>scelta attuale('s');attuale;s;scelta attuale;nessun cambiamento</value>
  </data>
  <data name="MatchNo" xml:space="preserve">
    <value>No;n</value>
  </data>
  <data name="MatchNoPreference" xml:space="preserve">
    <value>nessuna preferenza;no;nessuna;nessuno;non mi interessa</value>
  </data>
  <data name="MatchYes" xml:space="preserve">
    <value>sì;sicuro,ok</value>
  </data>
  <data name="PromptRetry" xml:space="preserve">
    <value>Non ho capito. Rispondi qualcosa.</value>
  </data>
  <data name="TemplateBool" xml:space="preserve">
    <value>Vorresti un/una {&amp;}? {||}</value>
  </data>
  <data name="TemplateBoolHelp" xml:space="preserve">
    <value>Per favore rispondi 'sì' o 'no'{?, {0}}.</value>
    <comment>0-current choice, 1-no preference</comment>
  </data>
  <data name="TemplateClarify" xml:space="preserve">
    <value>Con "{0}" {&amp;} intendi {||}</value>
    <comment>0-term being clarified</comment>
  </data>
  <data name="TemplateCurrentChoice" xml:space="preserve">
    <value>(scelta attuale: {})</value>
  </data>
  <data name="TemplateDateTime" xml:space="preserve">
    <value>Inserisci la data e ora per {&amp;} {||}</value>
  </data>
  <data name="TemplateDateTimeHelp" xml:space="preserve">
    <value>Inserisci una data o un'espressione del tempo {?, {0}}{?, {1}}.</value>
    <comment>0-current choice, 1-no preference</comment>
  </data>
  <data name="TemplateDouble" xml:space="preserve">
    <value>Inserisci un numero {?tra {0:F1} e {1:F1}} per {&amp;} {||}</value>
    <comment>0-min, 1-max</comment>
  </data>
  <data name="TemplateDoubleChoiceFormat" xml:space="preserve">
    <value>{1}</value>
    <comment>0-number, 1-description</comment>
  </data>
  <data name="TemplateDoubleHelp" xml:space="preserve">
    <value>Inserisci un numero {? tra {2:F1} e {3:F1}}{?, {0}}{?, {1}}.</value>
    <comment>0-current choice, 1-no preference, 2-min, 3-max</comment>
  </data>
  <data name="TemplateEnumManyNumberHelp" xml:space="preserve">
    <value>Puoi inserire uno o più numeri {0}-{1} o parole dalle descrizioni. ({2})</value>
    <comment>0-min, 1-max and 2-enumerated descriptions</comment>
  </data>
  <data name="TemplateEnumManyWordHelp" xml:space="preserve">
    <value>Puoi inserire una o più selezioni dalle descrizioni. ({2})</value>
    <comment>2-enumerated descriptions</comment>
  </data>
  <data name="TemplateEnumOneNumberHelp" xml:space="preserve">
    <value>Puoi inserire un numero {0}-{1} o delle parole dalle descrizioni. ({2})</value>
    <comment>0-min, 1-max and 2-enumerated descriptions</comment>
  </data>
  <data name="TemplateEnumOneWordHelp" xml:space="preserve">
    <value>Puoi inserire qualsiasi parola dalle descrizioni. ({2})</value>
    <comment>2-enumerated descriptions</comment>
  </data>
  <data name="TemplateEnumSelectMany" xml:space="preserve">
    <value>Seleziona uno o più {&amp;} {||}</value>
  </data>
  <data name="TemplateEnumSelectOne" xml:space="preserve">
    <value>Seleziona un/una {&amp;} {||}</value>
  </data>
  <data name="TemplateFeedback" xml:space="preserve">
    <value>Per {&amp;} ho capito {}. {?"{0}" non è un'opzione.}</value>
    <comment>0-not understood term</comment>
  </data>
  <data name="TemplateHelp" xml:space="preserve">
    <value>Stai inserendo il campo {&amp;}. Risposte possibili:
{0}
{1}</value>
    <comment>0-recognizer help, 1-command help</comment>
  </data>
  <data name="TemplateHelpClarify" xml:space="preserve">
    <value>Stai specificando un valore {&amp;}. Risposte possibili:
{0}
{1}</value>
    <comment>0-recognizer help, 1-command help</comment>
  </data>
  <data name="TemplateHelpConfirm" xml:space="preserve">
    <value>Per favore rispondi alla domanda. Risposte possibili:
{0}
{1}</value>
    <comment>0-recognizer help, 1-command help</comment>
  </data>
  <data name="TemplateHelpNavigation" xml:space="preserve">
    <value>Scegli il campo da cambiare. Risposte possibili:
{0}
{1}</value>
    <comment>0-recognizer help, 1-command help</comment>
  </data>
  <data name="TemplateInteger" xml:space="preserve">
    <value>Inserisci un numero {? tra {0} e {1}} per {&amp;} {||}</value>
    <comment>0-min, 1-max</comment>
  </data>
  <data name="TemplateIntegerChoiceFormat" xml:space="preserve">
    <value>{1}</value>
    <comment>0-number, 1-description</comment>
  </data>
  <data name="TemplateIntegerHelp" xml:space="preserve">
    <value>Puoi inserire un numero{? tra {2} e {3}}{?, {0}}{?, {1}}.</value>
    <comment>0-current choice, 1-no preference, 2-min, 3-max</comment>
  </data>
  <data name="TemplateNavigation" xml:space="preserve">
    <value>Cosa vuoi cambiare? {||}</value>
  </data>
  <data name="TemplateNavigationCommandHelp" xml:space="preserve">
    <value>Puoi passare ad un altro campo inserendone il nome. ({0}).</value>
    <comment>0-list of field names</comment>
  </data>
  <data name="TemplateNavigationFormat" xml:space="preserve">
    <value>{&amp;}({})</value>
    <comment>0-list of field names</comment>
  </data>
  <data name="TemplateNavigationHelp" xml:space="preserve">
    <value>Scegli {?un numero da {0}-{1}, o} il nome di un campo.</value>
    <comment>0-min, 1-max</comment>
  </data>
  <data name="TemplateNoPreference" xml:space="preserve">
    <value>Nessuna preferenza</value>
  </data>
  <data name="TemplateNotUnderstood" xml:space="preserve">
    <value>"{0}" non è un'opzione {&amp;}.</value>
    <comment>0-is not understood term</comment>
  </data>
  <data name="TemplateStatusFormat" xml:space="preserve">
    <value>{&amp;}: {}</value>
  </data>
  <data name="TemplateString" xml:space="preserve">
    <value>Per favore inserisci {&amp;} {||}</value>
  </data>
  <data name="TemplateStringChoiceFormat" xml:space="preserve">
    <value>{1}</value>
    <comment>0-number, 1-description</comment>
  </data>
  <data name="TemplateStringHelp" xml:space="preserve">
    <value>Puoi inserire qualsiasi cosa (usa "'s per forzare una stringa){?, {0}}{?, {1}}.</value>
    <comment>0-current choice, 1-no preference</comment>
  </data>
  <data name="TemplateUnspecified" xml:space="preserve">
    <value>Non specificato</value>
  </data>
</root>